export type Tags = {
  readonly a: HTMLAnchorElement;
  readonly abbr: HTMLElement;
  readonly address: HTMLElement;
  readonly area: HTMLAreaElement;
  readonly article: HTMLElement;
  readonly aside: HTMLElement;
  readonly audio: HTMLAudioElement;
  readonly b: HTMLElement;
  readonly base: HTMLBaseElement;
  readonly bdi: HTMLElement;
  readonly bdo: HTMLElement;
  readonly big: HTMLElement;
  readonly blockquote: HTMLQuoteElement;
  readonly body: HTMLBodyElement;
  readonly br: HTMLBRElement;
  readonly button: HTMLButtonElement;
  readonly canvas: HTMLCanvasElement;
  readonly caption: HTMLTableCaptionElement;
  readonly cite: HTMLElement;
  readonly code: HTMLElement;
  readonly col: HTMLTableColElement;
  readonly colgroup: HTMLTableColElement;
  readonly data: HTMLDataElement;
  readonly datalist: HTMLDataListElement;
  readonly dd: HTMLElement;
  readonly del: HTMLModElement;
  readonly details: HTMLDetailsElement;
  readonly dfn: HTMLElement;
  readonly dialog: HTMLDialogElement;
  readonly div: HTMLDivElement;
  readonly dl: HTMLDListElement;
  readonly dt: HTMLElement;
  readonly em: HTMLElement;
  readonly embed: HTMLEmbedElement;
  readonly fieldset: HTMLFieldSetElement;
  readonly figcaption: HTMLElement;
  readonly figure: HTMLElement;
  readonly footer: HTMLElement;
  readonly form: HTMLFormElement;
  readonly h1: HTMLHeadingElement;
  readonly h2: HTMLHeadingElement;
  readonly h3: HTMLHeadingElement;
  readonly h4: HTMLHeadingElement;
  readonly h5: HTMLHeadingElement;
  readonly h6: HTMLHeadingElement;
  readonly head: HTMLHeadElement;
  readonly header: HTMLElement;
  readonly hgroup: HTMLElement;
  readonly hr: HTMLHRElement;
  readonly html: HTMLHtmlElement;
  readonly i: HTMLElement;
  readonly iframe: HTMLIFrameElement;
  readonly img: HTMLImageElement;
  readonly input: HTMLInputElement;
  readonly ins: HTMLModElement;
  readonly kbd: HTMLElement;
  readonly keygen: HTMLUnknownElement;
  readonly label: HTMLLabelElement;
  readonly legend: HTMLLegendElement;
  readonly li: HTMLLIElement;
  readonly link: HTMLLinkElement;
  readonly main: HTMLElement;
  readonly map: HTMLMapElement;
  readonly mark: HTMLElement;
  readonly marquee: HTMLMarqueeElement;
  readonly menu: HTMLMenuElement;
  readonly menuitem: HTMLUnknownElement;
  readonly meta: HTMLMetaElement;
  readonly meter: HTMLMeterElement;
  readonly nav: HTMLElement;
  readonly noscript: HTMLElement;
  readonly object: HTMLObjectElement;
  readonly ol: HTMLOListElement;
  readonly optgroup: HTMLOptGroupElement;
  readonly option: HTMLOptionElement;
  readonly output: HTMLOutputElement;
  readonly p: HTMLParagraphElement;
  readonly param: HTMLParamElement;
  readonly picture: HTMLPictureElement;
  readonly pre: HTMLPreElement;
  readonly progress: HTMLProgressElement;
  readonly q: HTMLQuoteElement;
  readonly rp: HTMLElement;
  readonly rt: HTMLElement;
  readonly ruby: HTMLElement;
  readonly s: HTMLElement;
  readonly samp: HTMLElement;
  readonly script: HTMLScriptElement;
  readonly search: HTMLElement;
  readonly section: HTMLElement;
  readonly select: HTMLSelectElement;
  readonly slot: HTMLSlotElement;
  readonly small: HTMLElement;
  readonly source: HTMLSourceElement;
  readonly span: HTMLSpanElement;
  readonly strong: HTMLElement;
  readonly style: HTMLStyleElement;
  readonly sub: HTMLElement;
  readonly summary: HTMLElement;
  readonly sup: HTMLElement;
  readonly table: HTMLTableElement;
  readonly tbody: HTMLTableSectionElement;
  readonly td: HTMLTableCellElement;
  readonly textarea: HTMLTextAreaElement;
  readonly tfoot: HTMLTableSectionElement;
  readonly th: HTMLTableCellElement;
  readonly thead: HTMLTableSectionElement;
  readonly time: HTMLTimeElement;
  readonly title: HTMLTitleElement;
  readonly tr: HTMLTableRowElement;
  readonly track: HTMLTrackElement;
  readonly u: HTMLElement;
  readonly ul: HTMLUListElement;
  readonly var: HTMLElement;
  readonly video: HTMLVideoElement;
  readonly wbr: HTMLElement;
  readonly svg: SVGSVGElement;
  readonly animate: SVGAnimateElement;
  readonly circle: SVGCircleElement;
  readonly animateMotion: SVGAnimateMotionElement;
  readonly animateTransform: SVGAnimateTransformElement;
  readonly clipPath: SVGClipPathElement;
  readonly defs: SVGDefsElement;
  readonly desc: SVGDescElement;
  readonly ellipse: SVGEllipseElement;
  readonly feBlend: SVGFEBlendElement;
  readonly feColorMatrix: SVGFEColorMatrixElement;
  readonly feComponentTransfer: SVGFEComponentTransferElement;
  readonly feComposite: SVGFECompositeElement;
  readonly feConvolveMatrix: SVGFEConvolveMatrixElement;
  readonly feDiffuseLighting: SVGFEDiffuseLightingElement;
  readonly feDisplacementMap: SVGFEDisplacementMapElement;
  readonly feDistantLight: SVGFEDistantLightElement;
  readonly feDropShadow: SVGFEDropShadowElement;
  readonly feFlood: SVGFEFloodElement;
  readonly feFuncA: SVGFEFuncAElement;
  readonly feFuncB: SVGFEFuncBElement;
  readonly feFuncG: SVGFEFuncGElement;
  readonly feFuncR: SVGFEFuncRElement;
  readonly feGaussianBlur: SVGFEGaussianBlurElement;
  readonly feImage: SVGFEImageElement;
  readonly feMerge: SVGFEMergeElement;
  readonly feMergeNode: SVGFEMergeNodeElement;
  readonly feMorphology: SVGFEMorphologyElement;
  readonly feOffset: SVGFEOffsetElement;
  readonly fePointLight: SVGFEPointLightElement;
  readonly feSpecularLighting: SVGFESpecularLightingElement;
  readonly feSpotLight: SVGFESpotLightElement;
  readonly feTile: SVGFETileElement;
  readonly feTurbulence: SVGFETurbulenceElement;
  readonly filter: SVGFilterElement;
  readonly foreignObject: SVGForeignObjectElement;
  readonly g: SVGGElement;
  readonly image: SVGImageElement;
  readonly line: SVGLineElement;
  readonly linearGradient: SVGLinearGradientElement;
  readonly marker: SVGMarkerElement;
  readonly mask: SVGMaskElement;
  readonly metadata: SVGMetadataElement;
  readonly mpath: SVGMPathElement;
  readonly path: SVGPathElement;
  readonly pattern: SVGPatternElement;
  readonly polygon: SVGPolygonElement;
  readonly polyline: SVGPolylineElement;
  readonly radialGradient: SVGRadialGradientElement;
  readonly rect: SVGRectElement;
  readonly set: SVGSetElement;
  readonly stop: SVGStopElement;
  readonly switch: SVGSwitchElement;
  readonly symbol: SVGSymbolElement;
  readonly text: SVGTextElement;
  readonly textPath: SVGTextPathElement;
  readonly tspan: SVGTSpanElement;
  readonly use: SVGUseElement;
  readonly view: SVGViewElement;
};

export type Primitive = string | number | boolean | bigint;

export type OrFunction<T extends Partial<Element>> = {
  [K in keyof T]: T[K] | (() => T[K]);
};
